% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/epiweek_to_date.R
\name{with_epidate}
\alias{with_epidate}
\title{Annotate a dataframe with epiweek and epiyear
columns with an epidate column.}
\usage{
with_epidate(
  df,
  epiweek_col = "epiweek",
  epiyear_col = "epiyear",
  epidate_name = "epidate",
  day_of_week = 1,
  epiweek_standard = "MMWR"
)
}
\arguments{
\item{df}{data frame to annotate.}

\item{epiweek_col}{Name of the column containing epiweek values.
Default \code{"epiweek"}.}

\item{epiyear_col}{Name of the column containing epiyear values.
Default \code{"epiyear"}.}

\item{epidate_name}{Name for the output column containing the
associated "epidates". Default \code{"epidate"}.}

\item{day_of_week}{Which day of the epidemiological week to use
for the epidate. 1-indexed. Passed to \code{\link[=epiweek_to_date]{epiweek_to_date()}}.
Default 1 (start date of the epiweek).}

\item{epiweek_standard}{One of \code{"MMWR"} or \code{"USA"}
(USA MMWR epiweek, starts on Sunday) and \code{"ISO"} (ISO
week, starts on Monday). Not case-sensitive. Must be a single
value. Default \code{"MMWR"}.}
}
\value{
The data frame annotated with the epidate column.
}
\description{
Annotate a dataframe with epiweek and epiyear
columns with an epidate column.
}
\examples{

tibble::tibble(epiweek = c(1, 2), epiyear = c(2024, 2025)) |>
  with_epidate()

tibble::tibble(epiweek = c(1, 2), epiyear = c(2024, 2025)) |>
  with_epidate(day_of_week = 7, epidate_name = "week_ending_date")

tibble::tibble(epiweek = c(1, 2), epiyear = c(2024, 2025)) |>
  with_epidate(day_of_week = c(1, 7))

tibble::tibble(epiweek = c(1, 2), epiyear = c(2024, 2025)) |>
  with_epidate(epiweek_standard = "ISO")

tibble::tibble(wk = c(1, 2), yr = c(2024, 2025)) |>
  with_epidate(epiweek_col = "wk", epiyear_col = "yr")

}
