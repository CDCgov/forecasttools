% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hub_utils.R
\name{hub_target_data_as_of}
\alias{hub_target_data_as_of}
\title{Filter to a given vintage of hub target data and drop the \code{as_of}
column.}
\usage{
hub_target_data_as_of(hub_target_data, as_of = "latest", .drop = TRUE)
}
\arguments{
\item{hub_target_data}{Table of hub target data to filter}

\item{as_of}{As of date to filter to, as an object coercible by
\code{\link[=as.Date]{as.Date()}}, or "latest" to filter to the most recent available
vintage. Default \code{"latest"}.}

\item{.drop}{Drop the \code{as_of} column once the dataset
has been filtered to a specific vintage? Default \code{TRUE}.}
}
\value{
The specific requested vintage of target data,
potentially with the \code{as_of} column removed.
}
\description{
This function succeeds silently on unvintaged target data tables
provided the user requests the latest available data. Otherwise,
it raises an error when the data set is not vintaged. It is designed
to work either with concrete dataframes or with the lazy API Arrow
datasets returned by \code{\link[hubData:connect_target_times]{hubData::connect_target_times()}} and
\code{\link[hubData:connect_target_oracle_output]{hubData::connect_target_oracle_output()}}. In the arrow case, it
will not execute the query (i.e. you must still call \code{\link[dplyr:compute]{dplyr::collect()}}
or similar to instantiate the results.
}
